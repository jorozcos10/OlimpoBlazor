// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OlimpoBlazor.Data;

#nullable disable

namespace OlimpoBlazor.Migrations
{
    [DbContext(typeof(GymDbContext))]
    [Migration("20241214221601_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OlimpoBlazor.Models.Clase", b =>
                {
                    b.Property<int>("ClaseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaseID"));

                    b.Property<int>("Cupo")
                        .HasColumnType("int");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreClase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaseID");

                    b.ToTable("Clases");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.Factura", b =>
                {
                    b.Property<int>("FacturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturaID"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("FacturaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.Inventario", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemID"));

                    b.Property<string>("NombreItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UltimoMantenimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("VidaUtilMeses")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.ToTable("Inventario");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.MetricasProgreso", b =>
                {
                    b.Property<int>("MetricaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MetricaID"));

                    b.Property<decimal?>("Biceps")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Pecho")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Piernas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Triceps")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("MetricaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("MetricasProgreso");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.Reserva", b =>
                {
                    b.Property<int>("ReservaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaID"));

                    b.Property<int>("ClaseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaReserva")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ReservaID");

                    b.HasIndex("ClaseID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.Factura", b =>
                {
                    b.HasOne("OlimpoBlazor.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.MetricasProgreso", b =>
                {
                    b.HasOne("OlimpoBlazor.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.Reserva", b =>
                {
                    b.HasOne("OlimpoBlazor.Models.Clase", "Clase")
                        .WithMany("Reservas")
                        .HasForeignKey("ClaseID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OlimpoBlazor.Models.Usuario", "Usuario")
                        .WithMany("Reservas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clase");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.Clase", b =>
                {
                    b.Navigation("Reservas");
                });

            modelBuilder.Entity("OlimpoBlazor.Models.Usuario", b =>
                {
                    b.Navigation("Reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
